// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	context "context"

	apimodels "github.com/go-microbot/viber/api/models"

	mock "github.com/stretchr/testify/mock"

	models "github.com/go-microbot/viber/models"
)

// Bot is an autogenerated mock type for the Bot type
type Bot struct {
	mock.Mock
}

// GetAccountInfo provides a mock function with given fields: ctx
func (_m *Bot) GetAccountInfo(ctx context.Context) (*models.AccountInfo, error) {
	ret := _m.Called(ctx)

	var r0 *models.AccountInfo
	if rf, ok := ret.Get(0).(func(context.Context) *models.AccountInfo); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.AccountInfo)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// RemoveWebhook provides a mock function with given fields: ctx
func (_m *Bot) RemoveWebhook(ctx context.Context) error {
	ret := _m.Called(ctx)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SetWebhook provides a mock function with given fields: ctx, req
func (_m *Bot) SetWebhook(ctx context.Context, req apimodels.SetWebhookRequest) (*apimodels.SetWebhookResponse, error) {
	ret := _m.Called(ctx, req)

	var r0 *apimodels.SetWebhookResponse
	if rf, ok := ret.Get(0).(func(context.Context, apimodels.SetWebhookRequest) *apimodels.SetWebhookResponse); ok {
		r0 = rf(ctx, req)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*apimodels.SetWebhookResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, apimodels.SetWebhookRequest) error); ok {
		r1 = rf(ctx, req)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
