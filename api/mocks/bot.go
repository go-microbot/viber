// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	context "context"

	apimodels "github.com/go-microbot/viber/api/models"

	mock "github.com/stretchr/testify/mock"

	models "github.com/go-microbot/viber/models"
)

// Bot is an autogenerated mock type for the Bot type
type Bot struct {
	mock.Mock
}

// GetAccountInfo provides a mock function with given fields: ctx
func (_m *Bot) GetAccountInfo(ctx context.Context) (*models.AccountInfo, error) {
	ret := _m.Called(ctx)

	var r0 *models.AccountInfo
	if rf, ok := ret.Get(0).(func(context.Context) *models.AccountInfo); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.AccountInfo)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// RemoveWebhook provides a mock function with given fields: ctx
func (_m *Bot) RemoveWebhook(ctx context.Context) error {
	ret := _m.Called(ctx)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SendContactMessage provides a mock function with given fields: ctx, req
func (_m *Bot) SendContactMessage(ctx context.Context, req apimodels.SendContactMessageRequest) (*apimodels.MessageResponse, error) {
	ret := _m.Called(ctx, req)

	var r0 *apimodels.MessageResponse
	if rf, ok := ret.Get(0).(func(context.Context, apimodels.SendContactMessageRequest) *apimodels.MessageResponse); ok {
		r0 = rf(ctx, req)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*apimodels.MessageResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, apimodels.SendContactMessageRequest) error); ok {
		r1 = rf(ctx, req)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SendFileMessage provides a mock function with given fields: ctx, req
func (_m *Bot) SendFileMessage(ctx context.Context, req apimodels.SendFileMessageRequest) (*apimodels.MessageResponse, error) {
	ret := _m.Called(ctx, req)

	var r0 *apimodels.MessageResponse
	if rf, ok := ret.Get(0).(func(context.Context, apimodels.SendFileMessageRequest) *apimodels.MessageResponse); ok {
		r0 = rf(ctx, req)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*apimodels.MessageResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, apimodels.SendFileMessageRequest) error); ok {
		r1 = rf(ctx, req)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SendLocationMessage provides a mock function with given fields: ctx, req
func (_m *Bot) SendLocationMessage(ctx context.Context, req apimodels.SendLocationMessageRequest) (*apimodels.MessageResponse, error) {
	ret := _m.Called(ctx, req)

	var r0 *apimodels.MessageResponse
	if rf, ok := ret.Get(0).(func(context.Context, apimodels.SendLocationMessageRequest) *apimodels.MessageResponse); ok {
		r0 = rf(ctx, req)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*apimodels.MessageResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, apimodels.SendLocationMessageRequest) error); ok {
		r1 = rf(ctx, req)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SendPictureMessage provides a mock function with given fields: ctx, req
func (_m *Bot) SendPictureMessage(ctx context.Context, req apimodels.SendPictureMessageRequest) (*apimodels.MessageResponse, error) {
	ret := _m.Called(ctx, req)

	var r0 *apimodels.MessageResponse
	if rf, ok := ret.Get(0).(func(context.Context, apimodels.SendPictureMessageRequest) *apimodels.MessageResponse); ok {
		r0 = rf(ctx, req)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*apimodels.MessageResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, apimodels.SendPictureMessageRequest) error); ok {
		r1 = rf(ctx, req)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SendRichMediaMessage provides a mock function with given fields: ctx, req
func (_m *Bot) SendRichMediaMessage(ctx context.Context, req apimodels.SendRichMediaMessageRequest) (*apimodels.MessageResponse, error) {
	ret := _m.Called(ctx, req)

	var r0 *apimodels.MessageResponse
	if rf, ok := ret.Get(0).(func(context.Context, apimodels.SendRichMediaMessageRequest) *apimodels.MessageResponse); ok {
		r0 = rf(ctx, req)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*apimodels.MessageResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, apimodels.SendRichMediaMessageRequest) error); ok {
		r1 = rf(ctx, req)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SendStickerMessage provides a mock function with given fields: ctx, req
func (_m *Bot) SendStickerMessage(ctx context.Context, req apimodels.SendStickerMessageRequest) (*apimodels.MessageResponse, error) {
	ret := _m.Called(ctx, req)

	var r0 *apimodels.MessageResponse
	if rf, ok := ret.Get(0).(func(context.Context, apimodels.SendStickerMessageRequest) *apimodels.MessageResponse); ok {
		r0 = rf(ctx, req)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*apimodels.MessageResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, apimodels.SendStickerMessageRequest) error); ok {
		r1 = rf(ctx, req)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SendTextMessage provides a mock function with given fields: ctx, req
func (_m *Bot) SendTextMessage(ctx context.Context, req apimodels.SendTextMessageRequest) (*apimodels.MessageResponse, error) {
	ret := _m.Called(ctx, req)

	var r0 *apimodels.MessageResponse
	if rf, ok := ret.Get(0).(func(context.Context, apimodels.SendTextMessageRequest) *apimodels.MessageResponse); ok {
		r0 = rf(ctx, req)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*apimodels.MessageResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, apimodels.SendTextMessageRequest) error); ok {
		r1 = rf(ctx, req)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SendURLMessage provides a mock function with given fields: ctx, req
func (_m *Bot) SendURLMessage(ctx context.Context, req apimodels.SendURLMessageRequest) (*apimodels.MessageResponse, error) {
	ret := _m.Called(ctx, req)

	var r0 *apimodels.MessageResponse
	if rf, ok := ret.Get(0).(func(context.Context, apimodels.SendURLMessageRequest) *apimodels.MessageResponse); ok {
		r0 = rf(ctx, req)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*apimodels.MessageResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, apimodels.SendURLMessageRequest) error); ok {
		r1 = rf(ctx, req)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SendVideoMessage provides a mock function with given fields: ctx, req
func (_m *Bot) SendVideoMessage(ctx context.Context, req apimodels.SendVideoMessageRequest) (*apimodels.MessageResponse, error) {
	ret := _m.Called(ctx, req)

	var r0 *apimodels.MessageResponse
	if rf, ok := ret.Get(0).(func(context.Context, apimodels.SendVideoMessageRequest) *apimodels.MessageResponse); ok {
		r0 = rf(ctx, req)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*apimodels.MessageResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, apimodels.SendVideoMessageRequest) error); ok {
		r1 = rf(ctx, req)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SetWebhook provides a mock function with given fields: ctx, req
func (_m *Bot) SetWebhook(ctx context.Context, req apimodels.SetWebhookRequest) (*apimodels.SetWebhookResponse, error) {
	ret := _m.Called(ctx, req)

	var r0 *apimodels.SetWebhookResponse
	if rf, ok := ret.Get(0).(func(context.Context, apimodels.SetWebhookRequest) *apimodels.SetWebhookResponse); ok {
		r0 = rf(ctx, req)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*apimodels.SetWebhookResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, apimodels.SetWebhookRequest) error); ok {
		r1 = rf(ctx, req)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
